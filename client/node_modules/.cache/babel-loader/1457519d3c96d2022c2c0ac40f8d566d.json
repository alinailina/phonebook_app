{"ast":null,"code":"var _jsxFileName = \"/Users/alinailina/Desktop/full_stack_open2020/part2/phonebook/src/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport contactsService from \"./services/contacts\";\nimport Search from \"./components/Search\";\nimport Form from \"./components/Form\";\nimport Contacts from \"./components/Contacts\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [query, setQuery] = useState(\"\"); // Gell all\n\n  useEffect(() => {\n    contactsService.getAll().then(initialContacts => {\n      setContacts(initialContacts);\n    });\n  }, []);\n\n  const handleName = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumber = e => {\n    setNewNumber(e.target.value);\n  }; // Add contact\n\n\n  const addContact = e => {\n    e.preventDefault(); // Create new contact\n\n    const newContact = {\n      name: newName,\n      number: newNumber\n    }; // Check if contact exists \n\n    if (contacts.filter(contact => contact.name === newContact.name).length > 0) {\n      alert(`${newContact.name} already exists! Update number?`); // Find index of existing contact\n\n      const index = contacts.findIndex(contact => contact.name === newContact.name); // Update contact\n\n      contactsService.update(index, newContact).then(response => {\n        setContacts(contacts.concat(response.data));\n      });\n    } else {\n      // Add new contact\n      contactsService.add(newContact).then(response => {\n        setContacts(contacts.concat(response.data));\n      });\n    } // Update \n\n\n    contactsService.getAll().then(response => {\n      setContacts(response.data);\n    });\n    setNewName(\"\");\n    setNewNumber(\"\");\n  }; // Delete contact\n\n\n  const deleteContact = id => {\n    contactsService.deleteContact(id).then(response => {\n      const newArr = contacts.filter(contact => contact.id !== id);\n      setContacts(newArr);\n    });\n  }; // Search\n\n\n  const handleQuery = e => {\n    setQuery(e.target.value);\n  };\n\n  const searchResults = contacts.filter(contact => contact.name.toLowerCase() === query.toLowerCase());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Search contacts\"), /*#__PURE__*/React.createElement(Search, {\n    handleQuery: handleQuery,\n    searchResults: searchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Add contact\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: addContact,\n    handleName: handleName,\n    handleNumber: handleNumber,\n    name: newName,\n    number: newNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Contacts\"), /*#__PURE__*/React.createElement(Contacts, {\n    contacts: contacts,\n    deleteContact: deleteContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/alinailina/Desktop/full_stack_open2020/part2/phonebook/src/index.js"],"names":["React","useEffect","useState","ReactDOM","contactsService","Search","Form","Contacts","App","contacts","setContacts","newName","setNewName","newNumber","setNewNumber","query","setQuery","getAll","then","initialContacts","handleName","e","target","value","handleNumber","addContact","preventDefault","newContact","name","number","filter","contact","length","alert","index","findIndex","update","response","concat","data","add","deleteContact","id","newArr","handleQuery","searchResults","toLowerCase","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport contactsService from \"./services/contacts\";\n\nimport Search from \"./components/Search\";\nimport Form from \"./components/Form\";\nimport Contacts from \"./components/Contacts\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n\n  // Gell all\n  useEffect(() => {\n    contactsService.getAll().then(initialContacts => {\n      setContacts(initialContacts);\n    });\n  }, []);\n\n  const handleName = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumber = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  // Add contact\n  const addContact = (e) => {\n    e.preventDefault();\n\n    // Create new contact\n    const newContact = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // Check if contact exists \n    if (\n      contacts.filter((contact) => contact.name === newContact.name).length > 0\n    ) {\n      alert(`${newContact.name} already exists! Update number?`);\n\n      // Find index of existing contact\n      const index = contacts.findIndex(\n        (contact) => contact.name === newContact.name\n      );\n\n      // Update contact\n      contactsService.update(index, newContact).then((response) => {\n        setContacts(contacts.concat(response.data));\n      });\n\n    } else {\n      // Add new contact\n      contactsService.add(newContact).then((response) => {\n        setContacts(contacts.concat(response.data));\n      });\n    }\n\n    // Update \n    contactsService.getAll().then((response) => {\n      setContacts(response.data);\n    });\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  // Delete contact\n  const deleteContact = (id) => {\n    contactsService.deleteContact(id).then((response) => {\n      const newArr = contacts.filter((contact) => contact.id !== id);\n      setContacts(newArr);\n    });\n  };\n\n  // Search\n  const handleQuery = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const searchResults = contacts.filter(\n    (contact) => contact.name.toLowerCase() === query.toLowerCase()\n  );\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <h2>Search contacts</h2>\n      <Search handleQuery={handleQuery} searchResults={searchResults} />\n      <h2>Add contact</h2>\n      <Form\n        onSubmit={addContact}\n        handleName={handleName}\n        handleNumber={handleNumber}\n        name={newName}\n        number={newNumber}\n      />\n      <h2>Contacts</h2>\n      <Contacts contacts={contacts} deleteContact={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}